// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signals Spam Trap Page bar chart props gets x axis props 1`] = `
Object {
  "tickFormatter": [Function],
  "ticks": Array [],
}
`;

exports[`Signals Spam Trap Page bar chart props renders tooltip content 1`] = `
<Fragment>
  <TooltipMetric
    label="Spam Trap Hits"
    value="2"
  />
  <TooltipMetric
    label="Injections"
    value="3"
  />
  <TooltipMetric
    label="Spam Trap Rate"
    value="0.1235%"
  />
</Fragment>
`;

exports[`Signals Spam Trap Page local state handles date select 1`] = `
<SpamTrapActions
  date="2017-01-02"
  percent={0.5}
/>
`;

exports[`Signals Spam Trap Page renders correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Overview",
      "to": "/signals",
    }
  }
  dimensionPrefix="Spam Trap Monitoring for"
  facet="sending-domain"
  facetId="test.com"
  primaryArea={<Connect(DateFilter) />}
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <Panel
        sectioned={true}
      >
        <ChartHeader
          primaryArea={
            <Calculation
              initialSelected="relative"
              onChange={[Function]}
            />
          }
          title="Spam Trap Monitoring"
          tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
        />
        <BarChart
          fill="#B157CE"
          gap={0.25}
          height={250}
          margin={
            Object {
              "bottom": 5,
              "left": 18,
              "right": 0,
              "top": 12,
            }
          }
          onClick={[Function]}
          selected="2017-01-01"
          timeSeries={
            Array [
              Object {
                "date": "2017-01-01",
                "relative_trap_hits": 0.1,
              },
              Object {
                "date": "2017-01-02",
                "relative_trap_hits": 0.5,
              },
            ]
          }
          tooltipContent={[Function]}
          width="99%"
          xAxisProps={
            Object {
              "tickFormatter": [Function],
              "ticks": Array [],
            }
          }
          xKey="date"
          yAxisProps={
            Object {
              "domain": Array [
                "auto",
                "auto",
              ],
              "tickFormatter": [Function],
            }
          }
          yKey="relative_trap_hits"
          yRange={
            Array [
              "auto",
              "auto",
            ]
          }
        />
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      >
        <SpamTrapActions
          date="2017-01-01"
          percent={0.1}
        />
      </div>
    </Grid.Column>
  </Grid>
  <OtherChartsHeader
    facet="sending-domain"
    facetId="test.com"
  />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(withEngagementRecencyDetails(EngagementRecencyPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithHealthScoreDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Spam Trap Page renders empty correctly 1`] = `
<Panel
  sectioned={true}
>
  <ChartHeader
    primaryArea={
      <Calculation
        initialSelected="relative"
        onChange={[Function]}
      />
    }
    title="Spam Trap Monitoring"
    tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
  />
  <Callout
    title="No Data Available"
  >
    Insufficient data to populate this chart
  </Callout>
</Panel>
`;

exports[`Signals Spam Trap Page renders error correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Overview",
      "to": "/signals",
    }
  }
  dimensionPrefix="Spam Trap Monitoring for"
  facet="sending-domain"
  facetId="test.com"
  primaryArea={<Connect(DateFilter) />}
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <Panel
        sectioned={true}
      >
        <ChartHeader
          primaryArea={
            <Calculation
              initialSelected="relative"
              onChange={[Function]}
            />
          }
          title="Spam Trap Monitoring"
          tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
        />
        <Callout
          title="Unable to Load Data"
        >
          error message
        </Callout>
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      />
    </Grid.Column>
  </Grid>
  <OtherChartsHeader
    facet="sending-domain"
    facetId="test.com"
  />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(withEngagementRecencyDetails(EngagementRecencyPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithHealthScoreDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Spam Trap Page renders loading correctly 1`] = `
<Panel
  sectioned={true}
>
  <ChartHeader
    primaryArea={
      <Calculation
        initialSelected="relative"
        onChange={[Function]}
      />
    }
    title="Spam Trap Monitoring"
    tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
  />
  <div
    style={
      Object {
        "height": "220px",
        "position": "relative",
      }
    }
  >
    <Loading />
  </div>
</Panel>
`;
